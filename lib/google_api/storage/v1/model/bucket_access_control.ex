# Copyright 2019 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the &quot;License&quot;);
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an &quot;AS IS&quot; BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# NOTE: This class is auto generated by the elixir code generator program.
# Do not edit the class manually.

defmodule GoogleApi.Storage.V1.Model.BucketAccessControl do
  @moduledoc """
  An access-control entry.

  ## Attributes

  *   `bucket` (*type:* `String.t`, *default:* `nil`) - The name of the bucket.
  *   `domain` (*type:* `String.t`, *default:* `nil`) - The domain associated with the entity, if any.
  *   `email` (*type:* `String.t`, *default:* `nil`) - The email address associated with the entity, if any.
  *   `entity` (*type:* `String.t`, *default:* `nil`) - The entity holding the permission, in one of the following forms: 
      - user-userId 
      - user-email 
      - group-groupId 
      - group-email 
      - domain-domain 
      - project-team-projectId 
      - allUsers 
      - allAuthenticatedUsers Examples: 
      - The user liz@example.com would be user-liz@example.com. 
      - The group example@googlegroups.com would be group-example@googlegroups.com. 
      - To refer to all members of the Google Apps for Business domain example.com, the entity would be domain-example.com.
  *   `entityId` (*type:* `String.t`, *default:* `nil`) - The ID for the entity, if any.
  *   `etag` (*type:* `String.t`, *default:* `nil`) - HTTP 1.1 Entity tag for the access-control entry.
  *   `id` (*type:* `String.t`, *default:* `nil`) - The ID of the access-control entry.
  *   `kind` (*type:* `String.t`, *default:* `storage#bucketAccessControl`) - The kind of item this is. For bucket access control entries, this is always storage#bucketAccessControl.
  *   `projectTeam` (*type:* `GoogleApi.Storage.V1.Model.BucketAccessControlProjectTeam.t`, *default:* `nil`) - The project team associated with the entity, if any.
  *   `role` (*type:* `String.t`, *default:* `nil`) - The access permission for the entity.
  *   `selfLink` (*type:* `String.t`, *default:* `nil`) - The link to this access-control entry.
  """

  use GoogleApi.Gax.ModelBase

  @type t :: %__MODULE__{
          :bucket => String.t(),
          :domain => String.t(),
          :email => String.t(),
          :entity => String.t(),
          :entityId => String.t(),
          :etag => String.t(),
          :id => String.t(),
          :kind => String.t(),
          :projectTeam => GoogleApi.Storage.V1.Model.BucketAccessControlProjectTeam.t(),
          :role => String.t(),
          :selfLink => String.t()
        }

  field(:bucket)
  field(:domain)
  field(:email)
  field(:entity)
  field(:entityId)
  field(:etag)
  field(:id)
  field(:kind)
  field(:projectTeam, as: GoogleApi.Storage.V1.Model.BucketAccessControlProjectTeam)
  field(:role)
  field(:selfLink)
end

defimpl Poison.Decoder, for: GoogleApi.Storage.V1.Model.BucketAccessControl do
  def decode(value, options) do
    GoogleApi.Storage.V1.Model.BucketAccessControl.decode(value, options)
  end
end

defimpl Poison.Encoder, for: GoogleApi.Storage.V1.Model.BucketAccessControl do
  def encode(value, options) do
    GoogleApi.Gax.ModelBase.encode(value, options)
  end
end
